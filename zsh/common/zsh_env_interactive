# vim:syntax=zsh
# vim:filetype=zsh

# dotfiles/zsh/common/zsh_env is always sourced because
# it's loaded by dotfiles/zsh/zprezto/runcoms/zshenv.
# This file is for interactive env, only to be loaded in .zshrc.

#
# interactive env
#

# load junegunn/fzf if installed
if [ -f ~/.fzf.zsh ]; then
  source ~/.fzf.zsh
  export FZF_DEFAULT_OPTS='--layout=reverse'
  # if fd is present, make fzf use that
  if [ ! -z "$(command -v fdfind)" ]; then
    export FZF_DEFAULT_COMMAND='fdfind --type f --hidden --follow --exclude={.git,.idea,.sass-cache,node_modules,build,.rustup,.cache}'
  elif [ ! -z "$(command -v fd)"  ]; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude={.git,.idea,.sass-cache,node_modules,build,.rustup,.cache}'
  fi

  # config fzf preview alias
  if [ "$(command -v batcat)" ]; then
    alias fp="fzf --preview 'batcat --style=numbers --color=always --line-range :500 {}'"
  elif [ "$(command -v bat)" ]; then
    alias fp="fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'"
  fi

  # config fzf function API
  FZF_API_PATH="${HOME}/dotfiles/fzf/fzf_api.sh"
  if [ -f "${FZF_API_PATH}" ]; then
    source "${FZF_API_PATH}"
  fi
fi

# glow
alias glow='command glow -p'

# exa
if [ "$(command -v exa)" ]; then
  alias lsx='exa -G -x --color auto --icons -s type'
  alias llx='exa -l --color auto --icons -s type --git'
  alias lax='llx -a'
  alias lx='lax'
  alias ltx='llx -a -snew'
fi

# kitty terminal app
alias kittyupdate='curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin'

# pgadmin
if [[ -z $(command -v pgadmin) ]]; then
  alias pgadmin="docker run -d --net=host --name pgadmin -e PGADMIN_DEFAULT_EMAIL='email@email.com' -e PGADMIN_DEFAULT_PASSWORD=password -e PGADMIN_LISTEN_PORT=54321 dpage/pgadmin4"
fi

# cd on exit in xplr file manager
if [[ $(command -v xplr) ]]; then
  alias xcd='cd "$(xplr --print-pwd-as-result)"'
fi

# pyenv
# fix: https://github.com/pyenv/pyenv/issues/1906
# fix: https://github.com/pyenv/pyenv-virtualenv/issues/390
if [[ -d $HOME/.pyenv ]]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init --path)"  # this only sets up the path stuff
    eval "$(pyenv init -)"       # this makes pyenv work in the shell
    eval "$(pyenv virtualenv-init -)"
    alias pyenv='nocorrect pyenv'
  fi
fi

# GPG for SSH authentication
# do it only if there's TTY
# -- look for macOS
if [[ $(command -v TTY) ]] && [[ "$(uname -s)" == 'Darwin' ]]; then
export "GPG_TTY=$(TTY)"
export "SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh"
# notes:
#   for command line tty, ~/.gnupg/gpg-agent.conf needs:
#       pinentry-program /usr/bin/pinentry-curses
#   if needed, run the command below to force telling the agent which tty to use
#     gpg-connect-agent updatestartuptty /bye
fi
# -- look for Linux (excluding WSL which needs socat and a different config and GitHub Codespaces, which has its own git signing magic)
if [[ $(command -v tty) ]] && [[ "$(uname -s)" == 'Linux' ]] && [[ -z "$(uname -a | grep -i wsl)" ]] && [[ -z "$(uname -a | grep -i codespaces)" ]]; then
export GPG_TTY=$TTY
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
fi

# use zoxide to jump around as fasd has been discontinued
if [ $(command -v zoxide) ]; then
  eval "$(zoxide init zsh)"
# legacy fallback: use fasd to jump around
elif [ $(command -v fasd) ]; then
  eval "$(fasd --init auto)"
fi

# zellij custom config path
export ZELLIJ_CONFIG_DIR="$HOME/dotfiles/zellij"

# Secure ShellFish iOS app integration
if [[ -f "$HOME/.shellfishrc" ]]; then
  source $HOME/.shellfishrc
fi

# Added by serverless binary installer
if [ -d "$HOME/.serverless/bin" ]; then
  export PATH="$HOME/.serverless/bin:$PATH"
fi

#
# Linux-only aliases
#
if [[ "$(uname -s)" == 'Linux' ]]; then
  alias xclip="xclip -selection c"
  alias open='xdg-open'

  # custom sublime text habits are hard to die...
  if [[ $(command -v subl) ]]; then
    alias st=subl
  fi
fi

#
# macOS-only aliases
#
if [[ "$(uname -s)" == 'Darwin' ]]; then
alias st='open -a Sublime\ Text'
alias vscode='open -a Visual\ Studio\ Code'
alias fork='open -a /Applications/Fork.app'
alias listen='lsof -iTCP -sTCP:LISTEN -n -P'
fi

